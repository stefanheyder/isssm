# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/isssm',
                'doc_host': 'https://stefanheyder.github.io',
                'git_url': 'https://github.com/stefanheyder/isssm',
                'lib_path': 'isssm'},
  'syms': { 'isssm.ce_method': { 'isssm.ce_method.ce_cholesky_block': ('cross_entropy_method.html#ce_cholesky_block', 'isssm/ce_method.py'),
                                 'isssm.ce_method.ce_cholesky_last': ('cross_entropy_method.html#ce_cholesky_last', 'isssm/ce_method.py'),
                                 'isssm.ce_method.ce_cholesky_precision': ( 'cross_entropy_method.html#ce_cholesky_precision',
                                                                            'isssm/ce_method.py'),
                                 'isssm.ce_method.ce_log_weights': ('cross_entropy_method.html#ce_log_weights', 'isssm/ce_method.py'),
                                 'isssm.ce_method.cholesky_components': ( 'cross_entropy_method.html#cholesky_components',
                                                                          'isssm/ce_method.py'),
                                 'isssm.ce_method.final_precision_root': ( 'cross_entropy_method.html#final_precision_root',
                                                                           'isssm/ce_method.py'),
                                 'isssm.ce_method.forward_model_markov_process': ( 'cross_entropy_method.html#forward_model_markov_process',
                                                                                   'isssm/ce_method.py'),
                                 'isssm.ce_method.joint_cov': ('cross_entropy_method.html#joint_cov', 'isssm/ce_method.py'),
                                 'isssm.ce_method.log_prob': ('cross_entropy_method.html#log_prob', 'isssm/ce_method.py'),
                                 'isssm.ce_method.marginals': ('cross_entropy_method.html#marginals', 'isssm/ce_method.py'),
                                 'isssm.ce_method.simulate': ('cross_entropy_method.html#simulate', 'isssm/ce_method.py'),
                                 'isssm.ce_method.simulate_backwards': ( 'cross_entropy_method.html#simulate_backwards',
                                                                         'isssm/ce_method.py'),
                                 'isssm.ce_method.transition_precision_root': ( 'cross_entropy_method.html#transition_precision_root',
                                                                                'isssm/ce_method.py')},
            'isssm.estimation': { 'isssm.estimation._lcnll': ('maximum_likelihood_estimation.html#_lcnll', 'isssm/estimation.py'),
                                  'isssm.estimation.gnll': ('maximum_likelihood_estimation.html#gnll', 'isssm/estimation.py'),
                                  'isssm.estimation.gnll_full': ('maximum_likelihood_estimation.html#gnll_full', 'isssm/estimation.py'),
                                  'isssm.estimation.initial_theta': ( 'maximum_likelihood_estimation.html#initial_theta',
                                                                      'isssm/estimation.py'),
                                  'isssm.estimation.lcnll': ('maximum_likelihood_estimation.html#lcnll', 'isssm/estimation.py'),
                                  'isssm.estimation.mle_glssm': ('maximum_likelihood_estimation.html#mle_glssm', 'isssm/estimation.py'),
                                  'isssm.estimation.mle_glssm_ad': ( 'maximum_likelihood_estimation.html#mle_glssm_ad',
                                                                     'isssm/estimation.py'),
                                  'isssm.estimation.mle_lcssm': ('maximum_likelihood_estimation.html#mle_lcssm', 'isssm/estimation.py')},
            'isssm.glssm': { 'isssm.glssm.FFBS': ('glssm.html#ffbs', 'isssm/glssm.py'),
                             'isssm.glssm.log_prob': ('glssm.html#log_prob', 'isssm/glssm.py'),
                             'isssm.glssm.log_probs_x': ('glssm.html#log_probs_x', 'isssm/glssm.py'),
                             'isssm.glssm.log_probs_y': ('glssm.html#log_probs_y', 'isssm/glssm.py'),
                             'isssm.glssm.simulate_glssm': ('glssm.html#simulate_glssm', 'isssm/glssm.py'),
                             'isssm.glssm.simulate_smoothed_FW1994': ('glssm.html#simulate_smoothed_fw1994', 'isssm/glssm.py'),
                             'isssm.glssm.simulate_states': ('glssm.html#simulate_states', 'isssm/glssm.py')},
            'isssm.glssm_models': { 'isssm.glssm_models.ar1': ('models/gaussian_models.html#ar1', 'isssm/glssm_models.py'),
                                    'isssm.glssm_models.common_factor_lcm': ( 'models/gaussian_models.html#common_factor_lcm',
                                                                              'isssm/glssm_models.py'),
                                    'isssm.glssm_models.lcm': ('models/gaussian_models.html#lcm', 'isssm/glssm_models.py')},
            'isssm.importance_sampling': { 'isssm.importance_sampling.ess': ( 'importance_sampling.html#ess',
                                                                              'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.ess_lw': ( 'importance_sampling.html#ess_lw',
                                                                                 'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.ess_pct': ( 'importance_sampling.html#ess_pct',
                                                                                  'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.lcssm_importance_sampling': ( 'importance_sampling.html#lcssm_importance_sampling',
                                                                                                    'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.log_weights': ( 'importance_sampling.html#log_weights',
                                                                                      'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.log_weights_t': ( 'importance_sampling.html#log_weights_t',
                                                                                        'isssm/importance_sampling.py'),
                                           'isssm.importance_sampling.normalize_weights': ( 'importance_sampling.html#normalize_weights',
                                                                                            'isssm/importance_sampling.py')},
            'isssm.kalman': { 'isssm.kalman.filter': ('kalman_filter_smoother.html#filter', 'isssm/kalman.py'),
                              'isssm.kalman.kalman': ('kalman_filter_smoother.html#kalman', 'isssm/kalman.py'),
                              'isssm.kalman.predict': ('kalman_filter_smoother.html#predict', 'isssm/kalman.py'),
                              'isssm.kalman.smooth_step': ('kalman_filter_smoother.html#smooth_step', 'isssm/kalman.py'),
                              'isssm.kalman.smoother': ('kalman_filter_smoother.html#smoother', 'isssm/kalman.py'),
                              'isssm.kalman.sqrt_filter': ('kalman_filter_smoother.html#sqrt_filter', 'isssm/kalman.py'),
                              'isssm.kalman.sqrt_kalman': ('kalman_filter_smoother.html#sqrt_kalman', 'isssm/kalman.py'),
                              'isssm.kalman.sqrt_predict': ('kalman_filter_smoother.html#sqrt_predict', 'isssm/kalman.py'),
                              'isssm.kalman.sqrt_smooth_step': ('kalman_filter_smoother.html#sqrt_smooth_step', 'isssm/kalman.py'),
                              'isssm.kalman.sqrt_smoother': ('kalman_filter_smoother.html#sqrt_smoother', 'isssm/kalman.py')},
            'isssm.lcssm': { 'isssm.lcssm.log_prob': ('lcssm.html#log_prob', 'isssm/lcssm.py'),
                             'isssm.lcssm.log_probs_y': ('lcssm.html#log_probs_y', 'isssm/lcssm.py'),
                             'isssm.lcssm.nb_lcssm': ('lcssm.html#nb_lcssm', 'isssm/lcssm.py'),
                             'isssm.lcssm.poisson_lcssm': ('lcssm.html#poisson_lcssm', 'isssm/lcssm.py'),
                             'isssm.lcssm.simulate_lcssm': ('lcssm.html#simulate_lcssm', 'isssm/lcssm.py')},
            'isssm.mode_estimation': { 'isssm.mode_estimation.mode_estimation': ( 'mode_estimation.html#mode_estimation',
                                                                                  'isssm/mode_estimation.py')},
            'isssm.models.stsm': {'isssm.models.stsm.stsm': ('models/stsm.html#stsm', 'isssm/models/stsm.py')},
            'isssm.modified_efficient_importance_sampling': { 'isssm.modified_efficient_importance_sampling.modified_efficient_importance_sampling': ( 'modified_efficient_importance_sampling.html#modified_efficient_importance_sampling',
                                                                                                                                                       'isssm/modified_efficient_importance_sampling.py')},
            'isssm.optim': {'isssm.optim.converged': ('optimization.html#converged', 'isssm/optim.py')},
            'isssm.typing': { 'isssm.typing.FilterResult': ('typings.html#filterresult', 'isssm/typing.py'),
                              'isssm.typing.GLSSM': ('typings.html#glssm', 'isssm/typing.py'),
                              'isssm.typing.GLSSMObservationModel': ('typings.html#glssmobservationmodel', 'isssm/typing.py'),
                              'isssm.typing.GLSSMState': ('typings.html#glssmstate', 'isssm/typing.py'),
                              'isssm.typing.MarkovProcessCholeskyComponents': ( 'typings.html#markovprocesscholeskycomponents',
                                                                                'isssm/typing.py'),
                              'isssm.typing.PGSSM': ('typings.html#pgssm', 'isssm/typing.py'),
                              'isssm.typing.SmootherResult': ('typings.html#smootherresult', 'isssm/typing.py')},
            'isssm.util': {'isssm.util.MVN_degenerate': ('util.html#mvn_degenerate', 'isssm/util.py')}}}
