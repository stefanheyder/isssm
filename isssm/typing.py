# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/99_typings.ipynb.

# %% auto 0
__all__ = ['InitialState', 'Observations', 'States', 'GLSSMState', 'GLSSMObservationModel', 'GLSSM', 'FilterResult',
           'SmootherResult', 'PGSSM', 'GLSSMProposal', 'to_glssm', 'ConvergenceInformation', 'MarkovProposal']

# %% ../nbs/99_typings.ipynb 2
from typing import NamedTuple
import tensorflow_probability.substrates.jax.distributions as tfd
from jaxtyping import Float, Array, Bool

# %% ../nbs/99_typings.ipynb 3
InitialState = Float[Array, "m"]
Observations = Float[Array, "n+1 p"]
States = Float[Array, "n+1 m"]

# %% ../nbs/99_typings.ipynb 5
class GLSSMState(NamedTuple):
    x0: Float[Array, "m"] # initial mean 
    A: Float[Array, "n m m"] # state transition matrix
    Sigma: Float[Array, "n+1 m m"]

class GLSSMObservationModel(NamedTuple):
    B: Float[Array, "n+1 m m"]
    Omega: Float[Array, "n+1 m m"]

class GLSSM(NamedTuple):
    x0: Float[Array, "m"]
    A: Float[Array, "n m m"]
    Sigma: Float[Array, "n+1 m m"]
    B: Float[Array, "n+1 m m"]
    Omega: Float[Array, "n+1 m m"]

# %% ../nbs/99_typings.ipynb 7
class FilterResult(NamedTuple):
    x_filt: Float[Array, "n+1 m"]
    Xi_filt: Float[Array, "n+1 m m"]
    x_pred: Float[Array, "n+1 m"]
    Xi_pred: Float[Array, "n+1 m m"]

class SmootherResult(NamedTuple):
    x_smooth: Float[Array, "n+1 m"]
    Xi_smooth: Float[Array, "n+1 m m"]

# %% ../nbs/99_typings.ipynb 9
class PGSSM(NamedTuple):
    x0: Float[Array, "m"]
    A: Float[Array, "n m m"]
    Sigma: Float[Array, "n+1 m m"]
    B: Float[Array, "n+1 m m"]
    dist: tfd.Distribution
    xi: Float[Array, "n+1 m"]

# %% ../nbs/99_typings.ipynb 11
class GLSSMProposal(NamedTuple):
    x0: Float[Array, "m"]
    A: Float[Array, "n m m"]
    Sigma: Float[Array, "n+1 m m"]
    B: Float[Array, "n+1 p m"]
    Omega: Float[Array, "n+1 p p"]
    z: Float[Array, "n+1 p"]

def to_glssm(proposal: GLSSMProposal) -> GLSSM:
    return GLSSM(proposal.x0, proposal.A, proposal.Sigma, proposal.B, proposal.Omega)

class ConvergenceInformation(NamedTuple):
    converged: Bool
    n_iter: int
    delta: Float

# %% ../nbs/99_typings.ipynb 13
class MarkovProposal(NamedTuple):
    mean: Float[Array, "n+1 m"]
    R: Float[Array, "n+1 m m"]
    J_tt: Float[Array, "n m m"]  # lower triangular
    J_tp1t: Float[Array, "n m m"]
